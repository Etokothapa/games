import pygame
import time
import random

# Initialize Pygame
pygame.init()

# Screen dimensions
WIDTH, HEIGHT = 800, 600
BLOCK_SIZE = 20

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (200, 0, 0)
GREEN = (0, 200, 0)
BLUE = (0, 0, 255)

# Initialize screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Snake Game")

# Clock for controlling the frame rate
clock = pygame.time.Clock()

# Font for displaying the score
font = pygame.font.SysFont("comicsansms", 35)


def display_score(score):
    value = font.render(f"Score: {score}", True, WHITE)
    screen.blit(value, [10, 10])


def game_loop():
    # Snake initial position and speed
    snake_pos = [100, 50]
    snake_body = [[100, 50], [90, 50], [80, 50]]
    direction = "RIGHT"
    change_to = direction
    speed = 15

    # Food position
    food_pos = [random.randrange(1, (WIDTH // BLOCK_SIZE)) * BLOCK_SIZE,
                random.randrange(1, (HEIGHT // BLOCK_SIZE)) * BLOCK_SIZE]
    food_spawn = True

    score = 0

    while True:
        # Handle events
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_UP and direction != "DOWN":
                    change_to = "UP"
                elif event.key == pygame.K_DOWN and direction != "UP":
                    change_to = "DOWN"
                elif event.key == pygame.K_LEFT and direction != "RIGHT":
                    change_to = "LEFT"
                elif event.key == pygame.K_RIGHT and direction != "LEFT":
                    change_to = "RIGHT"

        # Update direction
        direction = change_to

        # Move the snake
        if direction == "UP":
            snake_pos[1] -= BLOCK_SIZE
        if direction == "DOWN":
            snake_pos[1] += BLOCK_SIZE
        if direction == "LEFT":
            snake_pos[0] -= BLOCK_SIZE
        if direction == "RIGHT":
            snake_pos[0] += BLOCK_SIZE

        # Growing the snake
        snake_body.insert(0, list(snake_pos))
        if snake_pos == food_pos:
            score += 10
            food_spawn = False
        else:
            snake_body.pop()

        if not food_spawn:
            food_pos = [random.randrange(1, (WIDTH // BLOCK_SIZE)) * BLOCK_SIZE,
                        random.randrange(1, (HEIGHT // BLOCK_SIZE)) * BLOCK_SIZE]
        food_spawn = True

        # Check for collisions
        if (snake_pos[0] < 0 or snake_pos[0] >= WIDTH or
                snake_pos[1] < 0 or snake_pos[1] >= HEIGHT):
            break

        for block in snake_body[1:]:
            if snake_pos == block:
                break

        # Update the screen
        screen.fill(BLACK)

        for pos in snake_body:
            pygame.draw.rect(screen, GREEN, pygame.Rect(
                pos[0], pos[1], BLOCK_SIZE, BLOCK_SIZE))

        pygame.draw.rect(screen, RED, pygame.Rect(
            food_pos[0], food_pos[1], BLOCK_SIZE, BLOCK_SIZE))

        display_score(score)

        pygame.display.update()

        # Control the frame rate
        clock.tick(speed)

    time.sleep(2)
    pygame.quit()
    quit()


# Run the game
if __name__ == "__main__":
    game_loop()
