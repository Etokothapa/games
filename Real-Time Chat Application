import socket
import threading

# Server configuration
HOST = '127.0.0.1'  # Localhost
PORT = 12345        # Port for the server

# Start the server
server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind((HOST, PORT))
server.listen()

clients = []
nicknames = []

def broadcast(message):
    """
    Send a message to all connected clients.
    """
    for client in clients:
        client.send(message)

def handle_client(client):
    """
    Handle communication with a specific client.
    """
    while True:
        try:
            # Receive and broadcast messages
            message = client.recv(1024)
            broadcast(message)
        except:
            # Remove and disconnect clients
            index = clients.index(client)
            clients.remove(client)
            client.close()
            nickname = nicknames[index]
            broadcast(f"{nickname} has left the chat!".encode('utf-8'))
            nicknames.remove(nickname)
            break

def receive_connections():
    """
    Accept and manage new client connections.
    """
    while True:
        client, address = server.accept()
        print(f"Connected with {str(address)}")

        # Request and store nickname
        client.send("NICK".encode('utf-8'))
        nickname = client.recv(1024).decode('utf-8')
        nicknames.append(nickname)
        clients.append(client)

        # Notify all clients
        print(f"Nickname of the client is {nickname}")
        broadcast(f"{nickname} has joined the chat!".encode('utf-8'))
        client.send("Connected to the server!".encode('utf-8'))

        # Start handling thread for the new client
        thread = threading.Thread(target=handle_client, args=(client,))
        thread.start()

print("Server is listening...")
receive_connections()




import socket
import threading

# Client configuration
HOST = '127.0.0.1'  # Server IP
PORT = 12345        # Server Port

client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client.connect((HOST, PORT))

def receive_messages():
    """
    Receive messages from the server.
    """
    while True:
        try:
            message = client.recv(1024).decode('utf-8')
            if message == "NICK":
                client.send(nickname.encode('utf-8'))
            else:
                print(message)
        except:
            # Handle disconnection
            print("An error occurred! Disconnecting...")
            client.close()
            break

def send_messages():
    """
    Send messages to the server.
    """
    while True:
        message = f"{nickname}: {input('')}"
        client.send(message.encode('utf-8'))

# Request nickname
nickname = input("Enter your nickname: ")

# Start threads for receiving and sending messages
receive_thread = threading.Thread(target=receive_messages)
receive_thread.start()

send_thread = threading.Thread(target=send_messages)
send_thread.start()
